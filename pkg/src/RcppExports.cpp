// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// agg_gr
List agg_gr(NumericMatrix ts_old, const int freq_new, const std::string& method);
RcppExport SEXP regts_agg_gr(SEXP ts_oldSEXP, SEXP freq_newSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type ts_old(ts_oldSEXP);
    Rcpp::traits::input_parameter< const int >::type freq_new(freq_newSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(agg_gr(ts_old, freq_new, method));
    return rcpp_result_gen;
END_RCPP
}
// parse_regperiod
NumericVector parse_regperiod(const std::string& period_text, double frequency);
RcppExport SEXP regts_parse_regperiod(SEXP period_textSEXP, SEXP frequencySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type period_text(period_textSEXP);
    Rcpp::traits::input_parameter< double >::type frequency(frequencySEXP);
    rcpp_result_gen = Rcpp::wrap(parse_regperiod(period_text, frequency));
    return rcpp_result_gen;
END_RCPP
}
// parse_regperiod_range
NumericVector parse_regperiod_range(const std::string& period_text, double frequency);
RcppExport SEXP regts_parse_regperiod_range(SEXP period_textSEXP, SEXP frequencySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type period_text(period_textSEXP);
    Rcpp::traits::input_parameter< double >::type frequency(frequencySEXP);
    rcpp_result_gen = Rcpp::wrap(parse_regperiod_range(period_text, frequency));
    return rcpp_result_gen;
END_RCPP
}
// is_period_text_
LogicalVector is_period_text_(std::vector<std::string> strings);
RcppExport SEXP regts_is_period_text_(SEXP stringsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string> >::type strings(stringsSEXP);
    rcpp_result_gen = Rcpp::wrap(is_period_text_(strings));
    return rcpp_result_gen;
END_RCPP
}
// get_regperiod_range
NumericVector get_regperiod_range(const SEXP& x);
RcppExport SEXP regts_get_regperiod_range(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const SEXP& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(get_regperiod_range(x));
    return rcpp_result_gen;
END_RCPP
}
