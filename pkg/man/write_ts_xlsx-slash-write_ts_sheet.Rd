% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write_ts.R
\name{write_ts_xlsx/write_ts_sheet}
\alias{write_ts_xlsx/write_ts_sheet}
\title{Functions for writing timeseries to an xlsx file}
\arguments{
\item{x}{a \code{\link{ts}} or \code{\link{regts}} object}

\item{file}{the filename of the output file}

\item{sheet_name}{the sheet name}

\item{sheet}{a \code{\link[xlsx]{Sheet}} object (see the documentation
of package \code{xlsx})}

\item{append}{If \code{FALSE} (the default), then the original file,
if it exists, is replaced with the new file. All original data is lost.
If \code{TRUE}, then only data on the sheet with
the specified sheet name is erased and replaced with new data.  If the sheet
does not yet exist, then a new sheet is created and appended to the
original file.}

\item{rowwise}{a logical value: should the timeseries be written rowwise?}

\item{labels}{should labels be written, and if so before or after
the names? By default, labels are written after the names if present}

\item{number_format}{a character value specifying the number format.
For example, \code{"#.00"} corresponds to two decimal spaces.
For details see the description of the function \code{\link[xlsx]{DataFormat}}
in the \code{\link[xlsx]{xlsx}} package.}

\item{comments}{a character vector or data frame. The comments
are written to the beginning of the sheet, before the timeseries data is
written.}
}
\description{
These functions can be used to write timeseries to a sheet of an
xlsx file. \code{write_ts_xlsx} creates or opens an Excel workbook
(depending on argument \code{append}) and writes the timeseries to
a sheet with a specified name.
\code{write_ts_sheet} writes timeseries to a \code{\link[xlsx]{Sheet}}
object.
}
\details{
The functions employ function \code{\link[xlsx]{addDataFrame}}
from the \code{\link[xlsx]{xlsx}} package for writing the Excel file.

If you want to write multiple timeseries objects to different
sheets, you can use \code{write_ts_xlsx} with argument
\code{append = TRUE}, or \code{write_ts_sheet}. The latter approach
is more efficient.
}
\examples{
# create two timeseries objects
ts1 <- regts(matrix(rnorm(50), ncol =  2), names = c("a", "b"),
             labels = c("Timeseries a", "Timeseries b"),
             start = "2017Q2")

# write timeseries ts1 to an Excel file
write_ts_xlsx(ts1, file = "ts1.xlsx", sheet_name = "ts1", labels = "after")

# write two sheets using write_ts_sheet
wb <- createWorkbook()
sheet <- createSheet(wb, "ts1")
write_ts_sheet(ts1, sheet, labels = "after")
sheet <- createSheet(wb, "ts1_times_100")
write_ts_sheet(ts1 * 100, sheet = sheet, labels = "after")
saveWorkbook(wb, "timeseries.xlsx")
#
# write a timeseries with comments
comments <- c("Timeseries ts1 is created on the Central Bureau of Policy Analysis",
              "using a random number generator")
 write_ts_xlsx(ts1, file = "ts_comments.xlsx", sheet_name = "ts1",
               comments = comments)
\dontshow{
   unlink("ts1.xlsx")
   unlink("timeseries.xlsx")
   unlink("ts_comments.xlsx")
}
}
