% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aggregate_gr.R
\name{aggregate_gr}
\alias{aggregate_gr}
\title{Convert timeseries with absolute or relative changes to a lower
frequency}
\usage{
aggregate_gr(x, method = c("dif1s", "dif1", "pct", "rel"),
  nfrequency = 1)
}
\arguments{
\item{x}{a \code{\link[stats]{ts}} or \code{\link{regts}} object}

\item{method}{Aggregation method: \code{"dif1s"}, \code{"dif1"}, \code{"pct"}
or \code{"rel"}. See Details.}

\item{nfrequency}{the frequency of the result. This should be higher than
the frequency of timeseries \code{x}}
}
\value{
a \code{regts} with frequency \code{nfrequency}
}
\description{
This function implements temporal aggregation for timeseries with absolute,
relative or percentage changes. As shown in vignette \emph{"Temporal Aggregation of
(Growth) Timeseries"},
the standard function \code{\link[stats]{aggregate}} does not yield correct
results for these type of timeseries.
}
\details{
There are methods for different types of input timeseries.
The \code{dif1s} and \code{dif1} methods assume that the input timeseries
contain a first difference (for \code{dif1s} the input is also
scaled). The result is a first difference in the output frequency.
The \code{pct} and \code{rel} methods assume timeseries that contain
percentage or relative change. They calculate the exact percentage or
relative change for the output timeseries.

More details are provided in vignette
\emph{"Temporal Aggregation of (Growth) Timeseries"}.
}
\examples{
ts_q <- regts(rnorm(10), start = "2016Q1")
aggregate_gr(ts_q, method = "dif1s")

ts_m <- regts(matrix(rnorm(20), ncol = 2), start = "2017M1", names = c("a", "b"))
aggregate_gr(ts_m, method = "rel", nfrequency = 4)
}
