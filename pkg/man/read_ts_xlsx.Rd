% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_ts_xlsx.R
\name{read_ts_xlsx}
\alias{read_ts_xlsx}
\title{Read timeseries from a sheet of an  xls(x) file}
\usage{
read_ts_xlsx(filename, sheet = NULL, range = NULL, skiprow = NA,
  skipcol = NA, rowwise, frequency = NA, labels = c("after",
  "before", "no"), na_string = "", name_fun, period_fun)
}
\arguments{
\item{filename}{a string with the filename}

\item{sheet}{Sheet to read. Either a string (the name of a sheet),
or an integer (the position of the sheet). Ignored if the sheet is
specified via range. If neither argument specifies the sheet,
defaults to the first sheet}

\item{range}{A cell range to read from, as described in
\code{\link[readxl]{cell-specification}}. Includes typical Excel ranges
like \code{"B3:D87"}, possibly including the
sheet name like \code{"Budget!B2:G14"}, and more.
Strictly, even if the range forces the inclusion of leading or trailing
empty rows or columns.
Takes precedence over \code{skiprow}, \code{skipcol} and \code{sheet}.}

\item{skiprow}{the number of rows to skip, including leading empty rows.
Ignored if \code{range} is given. By default, all leading empty rows are
skipped.}

\item{skipcol}{the number of columns to skip, including empty columns.
Ignored if \code{range} is given. By default, all leading empty columns are
skipped.}

\item{rowwise}{a logical value: are the timeseries stored rowwise?
If not specified, then \code{read_ts_xlsx} tries to figure out itself if
the timeseries are stored rowwise or columnwise.}

\item{frequency}{the frequency of the timeseries.
This argument is mandatory if the file contains period texts without
frequency indicator (for example "2011-1").}

\item{labels}{label option. See Details.}

\item{na_string}{Character vector of strings to use for missing values.
By default, \code{read_ts_xlsx} treats blank cells as missing data.}

\item{name_fun}{function to apply to the names of the timeseries.}

\item{period_fun}{function applied to period texts.
Use this argument if the period texts do not have a standard format
(see Description).}
}
\value{
a \code{regts} object
}
\description{
This function attempts to read timeseries from an xls(x) file.
The xls(x) file is actually read by function \code{\link[readxl]{read_excel}}
of package \code{readxl}.
The timeseries can be stored both rowwise or columnwise on the sheet.
The function tries to find period cells on the sheet. Period cells are
cells containing
\itemize{
\item a text with the format recognized by function \code{\link{period}},
for example \code{"2010Q2"}, \code{"2010.2Q"},
\code{"2010m2"}, \code{"2011"} or \code{"2011-1"},
\item an integer value (e.g. \code{2018}), which is considered as a year,
\item a date
}
Use argument \code{period_fun} if the period cells contain a text with a
format not recognized by function \code{period}.
}
\details{
In many cases, this function will read timeseries correctly.
However, \emph{you should always carefully check the results of this
function}. If the function fails or if the result is not
what you want, then you have to read the data into a data frame
(for example by using function \code{read_excel} of package \code{readxl}),
then convert the data frame to a standard columnwise data frame
and finally convert it to a \code{\link{regts}} by using function
\code{\link{as.regts}}.

If argument \code{rowwise} has not been specified, then
function \code{read_ts_xlsx} tries to guess if the timeseries are stored
rowwise or columnwise based on the positions of the period cells.

\strong{rowwise timeseries}

For rowwise timeseries, the function searches for the first
row with periods.  All rows before the period row are ignored.
Columns without a valid period in the period row are also ignored.
The first non-empty column in the sheet should contain the timeseries names
(or labels if argument \code{labels = "before"}, see the discussion below).
Otherwise, use argument \code{skipcol} to specify the number of columns
to skip.

\if{html}{\figure{xlsschemarowwise.jpg}{options: width=260}}
\if{latex}{\figure{xlsschemarowwise.jpg}{options: width=5in}}

There may be more than one column before the columns with timeseries values
(data columns). In that case one column should contain the variable names.
The other columns before the first data column are used to create
timeseries labels (see \code{\link{ts_labels}}). If argument
\code{labels = "after"} (default), then the first
column contains the variable names. If \code{labels = "no"} the first column
also contains variable names but the other columns before the first data
column are ignored. If argument \code{labels = "before"}, then the variable
names should be in the last column before the first data column.

\strong{columnwise timeseries}

For columnwise timeseries, the first non-empty row that has been read (see
argument \code{range} or \code{skiprow}) should contain the variable names
(or labels if argument \code{labels = "before"}, see the discussion below).
The periods can be in any column on the sheet.
Rows without a valid period in the period column are ignored.
All columns to the left of the period column are also ignored.

\if{html}{\figure{xlsschemacolumnwise.jpg}{options: width=240}}
\if{latex}{\figure{xlsschemacolumnwise.jpg}{options: width=5in}}

There may be more than one row before the rows with timeseries values
(data rows). In that case one row should contain the variable names.
The other rows before the first data row are used to create
timeseries labels (see \code{\link{ts_labels}}).
If argument  \code{labels = "after"} (default), then the first
row contains the variable names. If \code{labels = "no"} the first row
also contains variable names but the other rows before the first data
row are ignored. If argument \code{labels = "before"}, then the variable
names should be in the last row before the first data row.

By default, the function skips all leading empty rows and columns,
just as \code{read_excel}. This behaviour can be overruled by specifying
arguments \code{range}, \code{skiprow} or \code{skipcol}.

Sometimes it helps to supply information about the structure of
the data on the sheet. Specify option  \code{rowwise} if you know
that the timeseries are stored rowwise or columnwise. Specify
argument \code{frequency} if you already know the frequency of the timeseries.
Argument \code{frequency} is mandatory if a general period format
such as  \code{"2011-1"} has been used.

With \code{name_fun} a function can be applied to names of the timeseries,
e.g. \code{\link{tolower}}.
}
\examples{
\dontrun{
read_ts_xlsx("series.xlsx", skipcol = 2, na_string = c("", "NA"))
read_ts_xlsx("data.xlsx", sheet = "Budget", labels = "after",
             name_fun = tolower)
}

}
\seealso{
\code{\link{write_ts_xlsx}} and \code{\link{read_ts_csv}}
}
