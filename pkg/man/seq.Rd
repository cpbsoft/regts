% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/seq.R
\name{seq}
\alias{seq}
\alias{seq.period}
\alias{seq.character}
\title{Generates a sequence of periods}
\usage{
\method{seq}{period}(from, to, by, length.out, ...)

\method{seq}{character}(from, to, by, length.out = NULL, ...)
}
\arguments{
\item{from}{a \code{period} object or a character specifying the first period
of the sequence. If \code{from} is a character, it is coerced to a period object
with function \code{\link{as.period}}.}

\item{to}{a \code{period} object or a character
specifying the last period of the sequence.}

\item{by}{an integer number, the increment of the sequence (the number of
periods between each period in the sequence).}

\item{length.out}{the desired length of the sequence. A non-negative number.
If both \code{from} and \code{to} have been specified, and if
\code{length.out} > 1, then the number of periods between \code{from} and
\code{to} should be divisible by \code{length.out - 1}.}

\item{...}{arguments passed to or from methods (not used)}
}
\value{
a \code{period} vector
}
\description{
Generates a regular sequence of \code{\link[regts]{period}} objects.
}
\details{
If both \code{from} and \code{to} are specified, then the two periods must have
the same frequency.
}
\examples{
p1 <- period("2018q2")
seq(p1, length.out = 4)
seq(p1, "2019q4")
seq(p1, "2019q4", by = 2)
seq("2018q1", "2020q1", by = 4)

# example: print the value of a timeseries for every first quarter of a year
x <- regts(1:10, start = "2018q1")
seqp <- seq("2018q1", "2020q1", by = 4)
for (prd in as.list(seqp)) {
  cat(sprintf("x[\%s] = \%g\n", prd, x[prd]))
}
# Note that we do not loop directly over the period vector, but first convert
# the vector to a list. Otherwise the period class is lost.

}
\seealso{
\code{\link[regts]{period}}, \code{\link[regts]{period_range}} and
\code{\link[regts]{get_periods}}
}
